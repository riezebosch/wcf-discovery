//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Netflix.Console.NetflixServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:www-netflix-com:wcf-demo", ConfigurationName="NetflixServiceReference.INetflixService")]
    public interface INetflixService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:www-netflix-com:wcf-demo/INetflixService/Top10", ReplyAction="urn:www-netflix-com:wcf-demo/INetflixService/Top10Response")]
        string[] Top10();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:www-netflix-com:wcf-demo/INetflixService/Top10", ReplyAction="urn:www-netflix-com:wcf-demo/INetflixService/Top10Response")]
        System.Threading.Tasks.Task<string[]> Top10Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:www-netflix-com:wcf-demo/INetflixService/SetState", ReplyAction="urn:www-netflix-com:wcf-demo/INetflixService/SetStateResponse")]
        void SetState(System.Guid data);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:www-netflix-com:wcf-demo/INetflixService/SetState", ReplyAction="urn:www-netflix-com:wcf-demo/INetflixService/SetStateResponse")]
        System.Threading.Tasks.Task SetStateAsync(System.Guid data);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:www-netflix-com:wcf-demo/INetflixService/GetData", ReplyAction="urn:www-netflix-com:wcf-demo/INetflixService/GetDataResponse")]
        System.Guid GetData();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:www-netflix-com:wcf-demo/INetflixService/GetData", ReplyAction="urn:www-netflix-com:wcf-demo/INetflixService/GetDataResponse")]
        System.Threading.Tasks.Task<System.Guid> GetDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:www-netflix-com:wcf-demo/INetflixService/Slow", ReplyAction="urn:www-netflix-com:wcf-demo/INetflixService/SlowResponse")]
        void Slow();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:www-netflix-com:wcf-demo/INetflixService/Slow", ReplyAction="urn:www-netflix-com:wcf-demo/INetflixService/SlowResponse")]
        System.Threading.Tasks.Task SlowAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INetflixServiceChannel : Netflix.Console.NetflixServiceReference.INetflixService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NetflixServiceClient : System.ServiceModel.ClientBase<Netflix.Console.NetflixServiceReference.INetflixService>, Netflix.Console.NetflixServiceReference.INetflixService {
        
        public NetflixServiceClient() {
        }
        
        public NetflixServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NetflixServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NetflixServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NetflixServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] Top10() {
            return base.Channel.Top10();
        }
        
        public System.Threading.Tasks.Task<string[]> Top10Async() {
            return base.Channel.Top10Async();
        }
        
        public void SetState(System.Guid data) {
            base.Channel.SetState(data);
        }
        
        public System.Threading.Tasks.Task SetStateAsync(System.Guid data) {
            return base.Channel.SetStateAsync(data);
        }
        
        public System.Guid GetData() {
            return base.Channel.GetData();
        }
        
        public System.Threading.Tasks.Task<System.Guid> GetDataAsync() {
            return base.Channel.GetDataAsync();
        }
        
        public void Slow() {
            base.Channel.Slow();
        }
        
        public System.Threading.Tasks.Task SlowAsync() {
            return base.Channel.SlowAsync();
        }
    }
}
